{% comment %}
  Search results page template
{% endcomment %}

<div class="search-page">
  <div class="container">
    <!-- Search Header -->
    <div class="search-header">
      <h1 class="search-title">
        {% if search.performed %}
          {% if search.results_count > 0 %}
            {{ search.results_count }} result{% unless search.results_count == 1 %}s{% endunless %} for "{{ search.terms }}"
          {% else %}
            No results found for "{{ search.terms }}"
          {% endif %}
        {% else %}
          Search
        {% endif %}
      </h1>
      
      <!-- Search Form -->
      <form action="{{ routes.search_url }}" method="get" class="search-form">
        <div class="search-input-wrapper">
          <input type="search" 
                 name="q" 
                 value="{{ search.terms | escape }}" 
                 placeholder="Search products..." 
                 class="search-input"
                 autocomplete="off">
          <button type="submit" class="search-button">
            {% render 'icon', icon: 'search' %}
          </button>
        </div>
      </form>
    </div>
    
    <!-- Search Results -->
    {% if search.performed %}
      {% if search.results_count > 0 %}
        
        <!-- Search Filters -->
        <div class="search-filters">
          <div class="filter-item">
            <label>Type:</label>
            <select class="filter-select" onchange="filterResults(this)">
              <option value="all">All</option>
              <option value="product">Products</option>
              <option value="page">Pages</option>
              <option value="article">Articles</option>
            </select>
          </div>
          
          <div class="filter-item">
            <label>Sort:</label>
            <select class="filter-select" onchange="sortResults(this)">
              <option value="relevance">Relevance</option>
              <option value="price-asc">Price: Low to High</option>
              <option value="price-desc">Price: High to Low</option>
              <option value="title-asc">A-Z</option>
              <option value="title-desc">Z-A</option>
            </select>
          </div>
        </div>
        
        <!-- Results Grid -->
        <div class="search-results">
          {% for item in search.results %}
            {% case item.object_type %}
              {% when 'product' %}
                <div class="search-result-item product-result">
                  {% render 'product-card', product: item %}
                </div>
              
              {% when 'page' %}
                <div class="search-result-item page-result">
                  <div class="result-content">
                    <h3><a href="{{ item.url }}">{{ item.title }}</a></h3>
                    <p class="result-type">Page</p>
                    <p class="result-excerpt">{{ item.content | strip_html | truncate: 150 }}</p>
                  </div>
                </div>
              
              {% when 'article' %}
                <div class="search-result-item article-result">
                  <div class="result-content">
                    <h3><a href="{{ item.url }}">{{ item.title }}</a></h3>
                    <p class="result-type">Article</p>
                    <p class="result-excerpt">{{ item.excerpt | default: item.content | strip_html | truncate: 150 }}</p>
                    <p class="result-date">{{ item.published_at | date: '%B %d, %Y' }}</p>
                  </div>
                </div>
              
              {% else %}
                <div class="search-result-item generic-result">
                  <div class="result-content">
                    <h3><a href="{{ item.url }}">{{ item.title }}</a></h3>
                    <p class="result-excerpt">{{ item.content | strip_html | truncate: 150 }}</p>
                  </div>
                </div>
            {% endcase %}
          {% endfor %}
        </div>
        
        <!-- Pagination -->
        {% if paginate.pages > 1 %}
          <div class="pagination-wrapper">
            {{ paginate | default_pagination }}
          </div>
        {% endif %}
        
      {% else %}
        <!-- No Results -->
        <div class="no-results">
          <div class="no-results-icon">
            {% render 'icon', icon: 'search' %}
          </div>
          <h3>No results found</h3>
          <p>Try different keywords or check your spelling.</p>
          
          <!-- Search Suggestions -->
          <div class="search-suggestions">
            <h4>Popular searches:</h4>
            <div class="suggestion-tags">
              <a href="{{ routes.search_url }}?q=shirts" class="suggestion-tag">Shirts</a>
              <a href="{{ routes.search_url }}?q=accessories" class="suggestion-tag">Accessories</a>
              <a href="{{ routes.search_url }}?q=sale" class="suggestion-tag">Sale</a>
              <a href="{{ routes.search_url }}?q=new" class="suggestion-tag">New Arrivals</a>
            </div>
          </div>
        </div>
      {% endif %}
      
    {% else %}
      <!-- Search Landing -->
      <div class="search-landing">
        <div class="search-categories">
          <h3>Popular Categories</h3>
          <div class="category-grid">
            {% for collection in collections limit: 6 %}
              {% unless collection.handle == 'frontpage' %}
                <a href="{{ collection.url }}" class="category-card">
                  {% if collection.image %}
                    <img src="{{ collection.image | img_url: '200x200' }}" alt="{{ collection.title }}">
                  {% endif %}
                  <h4>{{ collection.title }}</h4>
                  <span>{{ collection.products_count }} products</span>
                </a>
              {% endunless %}
            {% endfor %}
          </div>
        </div>
      </div>
    {% endif %}
  </div>
</div>

<script>
function filterResults(select) {
  const filterValue = select.value;
  const results = document.querySelectorAll('.search-result-item');
  
  results.forEach(result => {
    if (filterValue === 'all') {
      result.style.display = 'block';
    } else {
      const resultType = result.classList.contains(filterValue + '-result');
      result.style.display = resultType ? 'block' : 'none';
    }
  });
}

function sortResults(select) {
  // This would typically require a new search request with sort parameters
  console.log('Sort by:', select.value);
}

// Auto-focus search input
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.querySelector('.search-input');
  if (searchInput && !searchInput.value) {
    searchInput.focus();
  }
});
</script>

<style>
.search-page {
  padding: 40px 0;
}

.search-header {
  text-align: center;
  margin-bottom: 3rem;
}

.search-title {
  font-size: 2rem;
  margin-bottom: 2rem;
  color: #333;
}

.search-form {
  max-width: 600px;
  margin: 0 auto;
}

.search-input-wrapper {
  position: relative;
  display: flex;
}

.search-input {
  flex: 1;
  padding: 15px 20px;
  border: 2px solid #ddd;
  border-radius: 25px 0 0 25px;
  font-size: 1rem;
  outline: none;
}

.search-input:focus {
  border-color: #007bff;
}

.search-button {
  padding: 15px 20px;
  background: #007bff;
  color: white;
  border: 2px solid #007bff;
  border-radius: 0 25px 25px 0;
  cursor: pointer;
}

.search-button:hover {
  background: #0056b3;
  border-color: #0056b3;
}

.search-filters {
  display: flex;
  gap: 2rem;
  margin-bottom: 2rem;
  padding: 1rem 0;
  border-bottom: 1px solid #eee;
}

.filter-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.filter-item label {
  font-weight: 500;
  color: #333;
}

.filter-select {
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: white;
}

.search-results {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.search-result-item {
  background: white;
  border-radius: 8px;
  overflow: hidden;
}

.product-result {
  /* Product cards handled by product-card snippet */
}

.page-result,
.article-result,
.generic-result {
  border: 1px solid #eee;
  padding: 1.5rem;
}

.result-content h3 {
  margin-bottom: 0.5rem;
}

.result-content h3 a {
  color: #333;
  text-decoration: none;
}

.result-content h3 a:hover {
  color: #007bff;
}

.result-type {
  color: #007bff;
  font-size: 0.9rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.result-excerpt {
  color: #666;
  line-height: 1.5;
  margin-bottom: 0.5rem;
}

.result-date {
  color: #999;
  font-size: 0.9rem;
}

.pagination-wrapper {
  text-align: center;
  margin-top: 3rem;
}

.no-results {
  text-align: center;
  padding: 4rem 0;
}

.no-results-icon {
  font-size: 4rem;
  color: #ddd;
  margin-bottom: 2rem;
}

.no-results h3 {
  font-size: 1.8rem;
  margin-bottom: 1rem;
  color: #333;
}

.no-results p {
  color: #666;
  margin-bottom: 2rem;
}

.search-suggestions {
  max-width: 400px;
  margin: 0 auto;
}

.search-suggestions h4 {
  margin-bottom: 1rem;
  color: #333;
}

.suggestion-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
}

.suggestion-tag {
  padding: 8px 16px;
  background: #f8f9fa;
  color: #666;
  text-decoration: none;
  border-radius: 20px;
  font-size: 0.9rem;
  transition: all 0.2s;
}

.suggestion-tag:hover {
  background: #007bff;
  color: white;
}

.search-landing {
  text-align: center;
}

.search-categories h3 {
  font-size: 1.8rem;
  margin-bottom: 2rem;
  color: #333;
}

.category-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
}

.category-card {
  display: block;
  padding: 1.5rem;
  border: 1px solid #eee;
  border-radius: 8px;
  text-decoration: none;
  color: #333;
  transition: all 0.2s;
}

.category-card:hover {
  border-color: #007bff;
  transform: translateY(-2px);
}

.category-card img {
  width: 100px;
  height: 100px;
  object-fit: cover;
  border-radius: 50%;
  margin-bottom: 1rem;
}

.category-card h4 {
  margin-bottom: 0.5rem;
  color: #333;
}

.category-card span {
  color: #666;
  font-size: 0.9rem;
}

@media (max-width: 768px) {
  .search-filters {
    flex-direction: column;
    gap: 1rem;
  }
  
  .search-results {
    grid-template-columns: 1fr;
  }
  
  .category-grid {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }
  
  .search-input-wrapper {
    flex-direction: column;
  }
  
  .search-input,
  .search-button {
    border-radius: 25px;
  }
  
  .search-button {
    margin-top: 1rem;
  }
}
</style>